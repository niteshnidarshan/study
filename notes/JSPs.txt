-
javax.servlet.jsp.*;
javax.servlet.jsp.tagext.*;
javax.servlet.jsp.el.*;

** Phases of the JSP:
---------------------------
	1. Translation Phase
	2. Compilation Phase
	3. Execution Phase
		3.1 Loading and Instantiating			
		3.2 Initialization phase
		3.3 Request Processing phase

** JSP Life Cycle methods:
---------------------------
	1. public void jspInit()
	2. public void _jspService(HttpServletRequest, HttpServletResponse)
	3. public void jspDistroy()

** Implicite variables in JSP:
---------------------------------
	1. out [javax.servlet.jsp.JspWriter]
	2. request [javax.servlet.http.HttpServletRequest]
	3. response [javax.servlet.http.HttpServletResponse]
	4. config [javax.servlet.ServletConfig]
	5. application [javax.servlet.ServletContext]
	6. exception [java.lang.Throwable]
	7. session [javax.servlet.http.HttpSession]
	8. pageContext [javax.servlet.jsp.PageContext]
	9. page [like java.lang.Object]

** JSP tags :
--------------
	1. Scriptlet elements
		1.1 Declaration tag <%!...%>
			or			
			<jsp:declaration>...</jsp:declaration>

		1.2 expression tag <%=...%>
			or			
			<jsp:expression>...</jsp:expression>

		1.3 scriptlet <%...%>		
			or
			<jsp:scriptlet>...</jsp:scriptlet>

	2. Directive tags
		2.1 page directive
			2.1.1 import <%@page import="java.io.*, java.util.Map" %>
			2.1.2 contentType <%@page contentType=MIME Type %>		
			2.1.3 extends <%@page extends="fully qualified class name"%>
			2.1.4 errorPage
			2.1.5 isErrorPage <%@page isErrorPage=false errorPage="URL of the error JSP page"%> 
			2.1.6 session <%@page session="false"%> [default=true]
			2.1.7 buffer
			2.1.8 autoFlush <%@page autoFlush=false buffer=16KB %> [default 8KB]
			2.1.9 info <%@page info="Jai Ram g ki" %>		
			2.1.10 isELIgnored
			2.1.11 isThreadSafe <%@page isThreadSafe=false %> [default=true]

		2.2 include directive
			<%@include file="xyz.html" %>

		2.3 taglib directive

	3. Standard action
		3.1 <JSP:useBean id="" class="" name="" type="" scope="page/request/session/application"/>
		3.2 <JSP:setProperty name="" prorperty="" value="">
			
			3.2.1 <JSP:useBean id="eo" class="ep.empx.Emp">
				<JSP:setProperty name="eo" property="*"/>
			      </JSP:useBean> 		
		
		3.3 <JSP:getProperty name="eo" property="empNo"/>
		3.4 <JSP:forward page="">
			
			3.4.1 <jsp:forward page="company.jsp">
				<JSP: param name="sal" value="1.5f"/>
				<JSP: param name="name" value="Sathya"/>
			      </JSP:forward>

		3.5 <JSP:include page="">
	4. JSP commental tags

===========================
JSP configuration file(web.xml)
--------------------------------
	<web-app>
		<servlet>
			<servlet-name>xyz</servlet-name>
			<jsp-file>/JSPPAGE.jsp</jsp-file>
		</servlet>
		<servlet-mapping>
			<servlet-name>xyz</servlet-name>
			<url-pattern>/jspcall</url-pattern>
		</servlet-mapping>
	<web-app>

JSP Directive:
-------------------
	JSP directives are used to add or remove some behaviour to the JSP page.
	
	1) include directive
	2) page directive
	3) taglib directive

	It can be used in Jsp page as two ways:
		** by HTML tag : <%@directiveName attribute="value"%>
		** by XML tag: <jsp:directives.directiveName attribute="value"/> 

1) include directive:
------------------------
	<%@include file="HTML/JSP file name"%>
			or
	<jsp:directive.include file="HTML/JSP file name"/>

2) page directive:
-----------------------
	1) session:
		<%@page session="false"%> [default value of seesion is : "TRUE"]
	
	2) import:
		<%@page import="java.io.*,java.util.Map"%>

	3) contentType:
		<%@page contentType="text/xml"%>

	4) isTreadSafe:
		<%@page isThreadSafe="false"%> [default value of isTreadSafe is : "TRUE"]
		
		If isTreadSafe='false' then the transleted servlet will implement 'SingalThreadModel' interface 
		and allow only one thread at a time.

	5) errorPage:
		<%@page errorPage="errors.jsp"%>
	
	6) isErrorPage:
		<%@page isErrorPage="TRUE"%> [default value of isErrorPage is : "False"].

	7) buffer:
		In Servlet 'out' is an object of 'PrintWriter' class but in JSP 'out' is an implicite object of 'JspWriter' class.
		JspWriter==PrintWriter+buffer

		<%@page buffer="16KB"%> [default value of buffer is : "8KB"].  

	8) autoFlush:
		<%@page buffer="81KB" autoFlush="FALSE"%> [default value of autoFlush is : "false"].

	9) info:
		<%@page info="Jai Ram G ki"%>
		It will store in getServletInfo().

	10) extends:
		<%@page extends="x.y.z.Xyz"%>
		Here Xyz class must extends HttpServlet and implements HttpJspPage.

	11) language:
		Its default value is java always.
		<%@page language="java"%>
	
	12) isELIgnored:
		Its default value is 'false'. If its value is made 'true' then Expression Language will be ignored for this jsp page.	
		<%@page isELIgnored="true"%> [default value of isELIgnored is : "FALSE"].
		

action tags in JSP:
---------------------------
	action tags are given for a runtime communication between:
		JSP to a JSP
		JSP to a Servlet
		JSP to an Applet
		JSP to a bean class.

	It follows XML syntax:
	1)<jsp:forward>
		<jsp: forward page="xyz.jsp"/>
			or
		<jsp: forward page="xyz.jsp">
			<jsp:param name="p1" value="10"/> [Here param value will be added as an additional parameter to request object].
		</jsp: forward>

		It can be forwarded to the JSP page, HTML page, Servlet url-pattern.

	2)<jsp:include>
		In Jsp we have include directive as well as include action too.
		directive include is called static/ compile time includeing. It can include only JSP page or HTML page.
		but action include is called a dynamic/ runtime including. It can include Jsp Page, HTML page and Servlet url-pattern too.

		<jsp:include page="run.jsp">
			<jsp:param name="param1" value="10">
		</jsp:include>

	3)<jsp:plugin>
		It is used to integrate an applet application to the jsp page.

	4)<jsp:fallback>
		It is used inside the <jsp:plugin> to show the alternate message if the plugin not works properly.

	5)<jsp:useBean>
		This action tag is used toseperate the business logic from the presentation logic.

		<jsp:useBean id="object reffernce name" class="Business class name" scope="page/request/session/application"/>

	6)<jsp:setProperty>
		It is used for calling setter method of java bean.
		It must be used under the <jsp:useBean> tag.
		It has four attributes:
			**name
			**property
			**param
			**value
		Note: 'param' and value are same here, use either.

		<jsp:useBean id="myBean" class="packageX.packageY.ClassName" scope="session">
			<jsp:setProperty name="myBean" property="userName" value="101"/>			
		</jsp:useBean>

		If we want to get the parameter value of HTML/JSP page from request and set to the Bean properties all at once the use:
		But all the property in the bean class must follow same order.
		<jsp:setProperty name="loginBean" property="*"/>

	7)<jsp:getProperty>
		This tag calls the getter property of the bean class.
		Here "*" property is not used.
		It has only two attributes :
			**name
			**property
		<jsp:getProperty name="loginBean" property="userName"/>

Implicite object:
====================
	1) request [javax.servlet.http.HttpServletRequest--interface--]
	2) response [javax.servlet.http.HttpServletResponse--interface--]
	3) out [javax.servlet.jsp.JspWriter--class--]
	4) exception [java.lang.Throwable]
	5) session [javax.servlet.http.HttpSession--interface--]
	6) config [javax.servlet.ServletConfig--interface--]
	7) application [javax.servlet.ServletContext--interface--]
	8) page [java.lang.Object]
	9) pageContext [javax.servlet.jsp.PageContext--abstract class--]

	note: 'pageContext' is given for the following two purposes:
		a. To hold the implicite objects which are available in a jsp page.
		b. To store or retrieve attributes in any scope.
	pageContext.setAttribute("xyz", "java", 1);

3) taglib directive:
-----------------------
	<%@taglib uri="taglib uri" prefix="prefix name"%>

	uri="http://java.sun.com/jsp/jstl/core".
